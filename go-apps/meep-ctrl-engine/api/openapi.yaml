openapi: 3.0.1
info:
  description: |
    Copyright (c) 2019  InterDigital Communications, Inc
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  title: MEEP Controller REST API
  version: 1.0.0
servers:
- url: ///v1
tags:
- name: Scenario Configuration
- name: Scenario Execution
- name: MEEP Settings
- name: Pod States
paths:
  /scenarios:
    delete:
      operationId: deleteScenarioList
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
      summary: Delete all scenarios in MEEP store
      tags:
      - Scenario Configuration
    get:
      operationId: getScenarioList
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioList'
          description: OK
        404:
          content: {}
          description: Not found
      summary: Retrieve list of scenarios in MEEP store
      tags:
      - Scenario Configuration
  /scenarios/{name}:
    delete:
      operationId: deleteScenario
      parameters:
      - description: Scenario name
        in: path
        name: name
        required: true
        schema:
          type: string
          x-exportParamName: Name
        x-exportParamName: Name
      responses:
        200:
          content: {}
          description: OK
        400:
          content: {}
          description: Bad request
        404:
          content: {}
          description: Not found
      summary: Delete scenario from MEEP store
      tags:
      - Scenario Configuration
    get:
      operationId: getScenario
      parameters:
      - description: Scenario name
        in: path
        name: name
        required: true
        schema:
          type: string
          x-exportParamName: Name
        x-exportParamName: Name
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: OK
        400:
          content: {}
          description: Bad request
        404:
          content: {}
          description: Not found
      summary: Retrieve scenario from MEEP store
      tags:
      - Scenario Configuration
    post:
      operationId: createScenario
      parameters:
      - description: Scenario name
        in: path
        name: name
        required: true
        schema:
          type: string
          x-exportParamName: Name
        x-exportParamName: Name
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Scenario'
        description: Scenario to add to MEEP store
        required: true
      responses:
        200:
          content: {}
          description: OK
        400:
          content: {}
          description: Bad request
        404:
          content: {}
          description: Not found
      summary: Add new scenario to MEEP store
      tags:
      - Scenario Configuration
    put:
      operationId: setScenario
      parameters:
      - description: Scenario name
        in: path
        name: name
        required: true
        schema:
          type: string
          x-exportParamName: Name
        x-exportParamName: Name
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Scenario'
        description: Scenario to add to MEEP store
        required: true
      responses:
        200:
          content: {}
          description: OK
        400:
          content: {}
          description: Bad request
        404:
          content: {}
          description: Not found
      summary: Update scenario in MEEP store
      tags:
      - Scenario Configuration
  /active:
    delete:
      operationId: terminateScenario
      responses:
        200:
          content: {}
          description: OK
        404:
          content: {}
          description: Not found
      summary: Terminate active (deployed) scenario
      tags:
      - Scenario Execution
    get:
      operationId: getActiveScenario
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
          description: OK
      summary: Retrieve active (deployed) scenario
      tags:
      - Scenario Execution
  /active/{name}:
    post:
      operationId: activateScenario
      parameters:
      - description: Scenario name
        in: path
        name: name
        required: true
        schema:
          type: string
          x-exportParamName: Name
        x-exportParamName: Name
      responses:
        200:
          content: {}
          description: OK
        400:
          content: {}
          description: Bad request
        404:
          content: {}
          description: Not found
      summary: Activate (deploy) scenario
      tags:
      - Scenario Execution
  /active/serviceMaps:
    get:
      operationId: getActiveNodeServiceMaps
      parameters:
      - description: Unique node identifier
        in: query
        name: node
        schema:
          type: string
      - description: Exposed service type (ingress or egress)
        in: query
        name: type
        schema:
          type: string
      - description: Exposed service name
        in: query
        name: service
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NodeServiceMaps'
                type: array
          description: OK
        404:
          content: {}
          description: Not found
      summary: Retrieve list of active external node service mappings
      tags:
      - Scenario Execution
  /events/{type}:
    post:
      operationId: sendEvent
      parameters:
      - description: Event type
        in: path
        name: type
        required: true
        schema:
          type: string
          x-exportParamName: Type_
        x-exportParamName: Type_
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Event'
        description: Event to send to active scenario
        required: true
      responses:
        200:
          content: {}
          description: OK
        400:
          content: {}
          description: Bad request
      summary: Send event to active (deployed) scenario
      tags:
      - Scenario Execution
  /states:
    get:
      description: Returns pod status info for a list of pods
      operationId: getStates
      parameters:
      - description: Enables detailed stats if true
        in: query
        name: long
        schema:
          type: string
      - description: Pod type
        in: query
        name: type
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              example:
                podsStatus:
                - podName: mypod
                  namespace: default
                  meepApp: pod1
                  meepOrigin: scenario
                  meepScenario: myScenario
                  phase: Running
                  podInitialized: True
                  podReady: False
                  podScheduled: True
                  podUnschedulable: False
                  podConditionError: 'containers with unready status: [myshel]'
                  nbOkContainers: "0"
                  nbTotalContainers: "1"
                  nbPodRestart: "15005"
                  logicalState: Terminating
                  startTime: 2018-09-10 14:24:00 +0000 UTC
              schema:
                $ref: '#/components/schemas/PodsStatus'
          description: successful operation
      summary: This operation returns status information for pods
      tags:
      - Pod States
components:
  parameters:
    EventType:
      description: Event type
      in: path
      name: type
      required: true
      schema:
        type: string
        x-exportParamName: Type_
      x-exportParamName: Type_
    Name:
      description: Scenario name
      in: path
      name: name
      required: true
      schema:
        type: string
        x-exportParamName: Name
      x-exportParamName: Name
  requestBodies:
    Event:
      content:
        '*/*':
          schema:
            $ref: http://localhost:8291/meep-model.yaml#/definitions/Event
      description: Event to send to active scenario
      required: true
    Settings:
      content:
        '*/*':
          schema:
            $ref: http://localhost:8291/meep-model.yaml#/definitions/Settings
      description: MEEP Settings
      required: true
    Scenario:
      content:
        '*/*':
          schema:
            $ref: http://localhost:8291/meep-model.yaml#/definitions/Scenario
      description: Scenario to add to MEEP store
      required: true
  responses:
    Std204:
      content: {}
      description: No content
    Std401:
      content: {}
      description: Not authorized
    Std500:
      content: {}
      description: Internal server error
    Std202:
      content: {}
      description: Accepted
    Std400:
      content: {}
      description: Bad request
    Std201:
      content: {}
      description: Created
    Std416:
      content: {}
      description: Requested range not satisfiable
    Std404:
      content: {}
      description: Not found
    Std304:
      content: {}
      description: Not modified
    Std403:
      content: {}
      description: Forbidden
    Std409:
      content: {}
      description: Conflict
    Std200:
      content: {}
      description: OK
  schemas:
    ServicePort:
      description: Service port object
      example: {}
      properties:
        protocol:
          description: Protocol that the application is using (TCP or UDP)
          type: string
        port:
          description: Port number that the service is listening on
          type: integer
        externalPort:
          description: |
            External port number on which to expose the application (30000 - 32767)  <li>Only one application allowed per external port <li>Scenario builder must configure to prevent conflicts
          type: integer
      type: object
    EventMobility:
      description: Mobility Event object
      example:
        elementName: ue1
        dest: poa2
      properties:
        elementName:
          description: Name of the network element to be updated
          type: string
        dest:
          description: Destination element identifier
          type: string
      type: object
    Zone:
      description: Logical zone (MEC network) object
      example: {}
      properties:
        id:
          description: Unique zone ID
          type: string
        name:
          description: Zone name
          type: string
        type:
          description: Zone type
          enum:
          - ZONE
          - COMMON
          type: string
        interFogLatency:
          description: Latency in ms between fog nodes (or PoAs) within zone
          type: integer
        interFogLatencyVariation:
          description: Latency variation in ms between fog nodes (or PoAs) within zone
          type: integer
        interFogThroughput:
          description: The limit of the traffic supported between fog nodes (or PoAs) within the zone
          type: integer
        interFogPacketLoss:
          description: Packet lost (in terms of percentage) between fog nodes (or PoAs) within the zone
          format: double
          type: number
        interEdgeLatency:
          description: Latency in ms between edge nodes within zone
          type: integer
        interEdgeLatencyVariation:
          description: Latency variation in ms between edge nodes within zone
          type: integer
        interEdgeThroughput:
          description: The limit of the traffic supported between edge nodes within the zone
          type: integer
        interEdgePacketLoss:
          description: Packet lost (in terms of percentage) between edge nodes within the zone
          format: double
          type: number
        edgeFogLatency:
          description: Latency in ms between fog nodes (or PoAs) and edge nodes within zone
          type: integer
        edgeFogLatencyVariation:
          description: Latency variation in ms between fog nodes (or PoAs) and edge nodes within zone
          type: integer
        edgeFogThroughput:
          description: The limit of the traffic supported between fog nodes (or PoAs) and edge nodes within the zone
          type: integer
        edgeFogPacketLoss:
          description: Packet lost (in terms of percentage) between fog nodes (or PoAs) and edge nodes within the zone
          format: double
          type: number
        meta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        userMeta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        networkLocations:
          items:
            $ref: '#/components/schemas/NetworkLocation'
          type: array
      type: object
    Deployment:
      description: Network deployment object
      example: {}
      properties:
        interDomainLatency:
          description: Latency in ms between domains
          type: integer
        interDomainLatencyVariation:
          description: Latency variation in ms between domains
          type: integer
        interDomainThroughput:
          description: The limit of the traffic supported between domains
          type: integer
        interDomainPacketLoss:
          description: Packet lost (in terms of percentage) between domains
          format: double
          type: number
        meta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        userMeta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        domains:
          items:
            $ref: '#/components/schemas/Domain'
          type: array
      type: object
    Process:
      description: Application or service object
      example: {}
      properties:
        id:
          description: Unique process ID
          type: string
        name:
          description: Process name
          type: string
        type:
          description: Process type
          enum:
          - UE-APP
          - EDGE-APP
          - MEC-SVC
          - CLOUD-APP
          type: string
        isExternal:
          description: |-
            true: process is external to MEEP
            false: process is internal to MEEP
          type: boolean
        image:
          description: Docker image to deploy inside MEEP
          type: string
        environment:
          description: Environment variables using the format NAME="value",NAME="value",NAME="value"
          type: string
        commandArguments:
          description: Arguments to command executable
          type: string
        commandExe:
          description: Executable to invoke at container start up
          type: string
        serviceConfig:
          $ref: '#/components/schemas/ServiceConfig'
        gpuConfig:
          $ref: '#/components/schemas/GpuConfig'
        externalConfig:
          $ref: '#/components/schemas/ExternalConfig'
        status:
          description: Process status
          type: string
        userChartLocation:
          description: Chart location for the deployment of the chart provided by the user
          type: string
        userChartAlternateValues:
          description: Chart values.yaml file location for the deployment of the chart provided by the user
          type: string
        userChartGroup:
          description: Chart supplemental information related to the group (service)
          type: string
        meta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        userMeta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        appLatency:
          description: Latency in ms caused by the application
          type: integer
        appLatencyVariation:
          description: Latency variation in ms caused by the application
          type: integer
        appThroughput:
          description: The limit of the traffic supported by the application
          type: integer
        appPacketLoss:
          description: Packet lost (in terms of percentage) caused by the application
          format: double
          type: number
        placementId:
          description: Identifier used for process placement in AdvantEDGE cluster
          type: string
      type: object
    EventOther:
      description: Other Event object
      example:
        event: event
      properties:
        event:
          description: Other event string
          type: string
      type: object
    Scenario:
      description: Scenario object
      example: {}
      properties:
        name:
          description: Unique scenario name
          type: string
        config:
          $ref: '#/components/schemas/ScenarioConfig'
        deployment:
          $ref: '#/components/schemas/Deployment'
      type: object
    PodStatus:
      example:
        podStatus:
        - podName: mypod
          namespace: default
          meepApp: pod1
          meepOrigin: scenario
          meepScenario: myScenario
          phase: Running
          podInitialized: True
          podReady: False
          podScheduled: True
          podUnschedulable: False
          podConditionError: 'containers with unready status: [myshel]'
          nbOkContainers: "0"
          nbTotalContainers: "1"
          nbPodRestart: "15005"
          startTime: 2018-09-10 14:24:00 +0000 UTC
      properties:
        name:
          description: Pod name
          type: string
        namespace:
          description: Pod namespace
          type: string
        meepApp:
          description: Pod process name
          type: string
        meepOrigin:
          description: Pod origin(core, scenario)
          type: string
        meepScenario:
          description: Pod scenario name
          type: string
        phase:
          description: Pod phase
          type: string
        podInitialized:
          description: Pod initialized (true/false)
          type: string
        podReady:
          description: Pod ready (true/false)
          type: string
        podScheduled:
          description: Pod scheduled (true/false)
          type: string
        podUnschedulable:
          description: Pod unschedulable (true/false)
          type: string
        podConditionError:
          description: Pod error message
          type: string
        containerStatusesMsg:
          description: Failed container error message
          type: string
        nbOkContainers:
          description: Number of containers that are up
          type: string
        nbTotalContainers:
          description: Number of total containers in the pod
          type: string
        nbPodRestart:
          description: Number of container failures leading to pod restarts
          type: string
        logicalState:
          description: State that is mapping the kubernetes api state
          type: string
        startTime:
          description: Pod creation time
          type: string
      type: object
    ExternalConfig:
      description: |-
        External Process configuration.
        NOTE: Only valid if 'isExternal' is set.
      example: {}
      properties:
        ingressServiceMap:
          items:
            $ref: '#/components/schemas/IngressService'
          type: array
        egressServiceMap:
          items:
            $ref: '#/components/schemas/EgressService'
          type: array
      type: object
    NetworkLocation:
      description: Logical network location object
      example: {}
      properties:
        id:
          description: Unique network location ID
          type: string
        name:
          description: Network location name
          type: string
        type:
          description: Network location type
          enum:
          - POA
          - DEFAULT
          type: string
        terminalLinkLatency:
          description: Latency in ms for all terminal links within network location
          type: integer
        terminalLinkLatencyVariation:
          description: Latency variation in ms for all terminal links within network location
          type: integer
        terminalLinkThroughput:
          description: The limit of the traffic supported for all terminal links within the network location
          type: integer
        terminalLinkPacketLoss:
          description: Packet lost (in terms of percentage) for all terminal links within the network location
          format: double
          type: number
        meta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        userMeta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        physicalLocations:
          items:
            $ref: '#/components/schemas/PhysicalLocation'
          type: array
      type: object
    PodsStatus:
      description: List of all pods status
      example: {}
      properties:
        podStatus:
          items:
            $ref: '#/components/schemas/PodStatus'
          type: array
      type: object
    ServiceConfig:
      description: Service object
      example: {}
      properties:
        name:
          description: Unique service name
          type: string
        meSvcName:
          description: Multi-Edge service name, if any
          type: string
        ports:
          items:
            $ref: '#/components/schemas/ServicePort'
          type: array
      type: object
    GpuConfig:
      description: GPU configuration object
      properties:
        type:
          description: Requested GPU type
          type: string
        count:
          description: Number of GPUs requested
          type: integer
      type: object
    NodeServiceMaps:
      description: Node-specific mapping of exposed internal & external services
      example: {}
      properties:
        node:
          description: Unique external node identifier
          type: string
        ingressServiceMap:
          items:
            $ref: '#/components/schemas/IngressService'
          type: array
        egressServiceMap:
          items:
            $ref: '#/components/schemas/EgressService'
          type: array
      type: object
    IngressService:
      description: Internal service exposed externally via specific port
      properties:
        name:
          description: Service name (unique or multi-edge)
          type: string
        port:
          description: Internal service port number
          type: integer
        externalPort:
          description: Externally-exposed unique service port in range (30000 - 32767)
          type: integer
        protocol:
          description: Service protocol (TCP or UDP)
          type: string
      type: object
    Event:
      description: Event object
      example:
        name: name
        type: MOBILITY
        eventMobility:
          elementName: ue1
          dest: poa2
      properties:
        name:
          description: Event name
          type: string
        type:
          description: Event type
          enum:
          - NETWORK-CHARACTERISTICS-UPDATE
          - MOBILITY
          - POAS-IN-RANGE
          - OTHER
          type: string
        eventNetworkCharacteristicsUpdate:
          $ref: '#/components/schemas/EventNetworkCharacteristicsUpdate'
        eventMobility:
          $ref: '#/components/schemas/EventMobility'
        eventPoasInRange:
          $ref: '#/components/schemas/EventPoasInRange'
        eventOther:
          $ref: '#/components/schemas/EventOther'
      type: object
    Domain:
      description: Operator domain object
      example: {}
      properties:
        id:
          description: Unique domain ID
          type: string
        name:
          description: Domain name
          type: string
        type:
          description: Domain type
          enum:
          - OPERATOR
          - PUBLIC
          type: string
        interZoneLatency:
          description: Latency in ms between zones within domain
          type: integer
        interZoneLatencyVariation:
          description: Latency variation in ms between zones within domain
          type: integer
        interZoneThroughput:
          description: The limit of the traffic supported between zones within the domain
          type: integer
        interZonePacketLoss:
          description: Packet lost (in terms of percentage) between zones within the domain
          format: double
          type: number
        meta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        userMeta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        zones:
          items:
            $ref: '#/components/schemas/Zone'
          type: array
      type: object
    EgressService:
      description: External service exposed internally via specific port
      properties:
        name:
          description: Service name
          type: string
        meSvcName:
          description: Multi-Edge service name, if any
          type: string
        ip:
          description: External node IP address
          type: string
        port:
          description: Service port number
          type: integer
        protocol:
          description: Service protocol (TCP or UDP)
          type: string
      type: object
    EventNetworkCharacteristicsUpdate:
      description: Network Characteristics update Event object
      example: {}
      properties:
        elementName:
          description: Name of the network element to be updated
          type: string
        elementType:
          description: Type of the network element to be updated
          enum:
          - OPERATOR
          - POA
          - SCENARIO
          - ZONE-INTER-EDGE
          - ZONE-INTER-FOG
          - ZONE-EDGE-FOG
          - EDGE
          - FOG
          - UE
          - DISTANT-CLOUD
          - UE-APP
          - EDGE-APP
          - CLOUD-APP
          type: string
        latency:
          description: Latency in ms
          type: integer
        latencyVariation:
          description: Latency variation in ms
          type: integer
        throughput:
          description: Throughput limit
          type: integer
        packetLoss:
          description: Packet loss percentage
          format: double
          type: number
      type: object
    ScenarioConfig:
      description: Scenario configuration
      example:
        visualization: visualization
        other: other
      properties:
        visualization:
          description: Visualization configuration
          type: string
        other:
          description: Other scenario configuration
          type: string
      type: object
    ScenarioList:
      description: Scenario list object
      example: {}
      properties:
        scenarios:
          items:
            $ref: '#/components/schemas/Scenario'
          type: array
      type: object
    PhysicalLocation:
      description: Physical location object
      example: {}
      properties:
        id:
          description: Unique physical location ID
          type: string
        name:
          description: Physical location name
          type: string
        type:
          description: Physical location type
          enum:
          - UE
          - FOG
          - EDGE
          - CN
          - DC
          type: string
        isExternal:
          description: |-
            true: Physical location is external to MEEP
            false: Physical location is internal to MEEP
          type: boolean
        networkLocationsInRange:
          items:
            description: Names of network locations within range of physical location
            type: string
          type: array
        meta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        userMeta:
          additionalProperties:
            type: string
          description: Key/Value Pair Map (string, string)
          type: object
        processes:
          items:
            $ref: '#/components/schemas/Process'
          type: array
        linkLatency:
          description: Latency in ms between the physical location and the network (wired interface, air interface)
          type: integer
        linkLatencyVariation:
          description: Latency variation in ms between the physical location and the network (wired interface, air interface)
          type: integer
        linkThroughput:
          description: The limit of the traffic supported between the physical location and the network (wired interface, air interface)
          type: integer
        linkPacketLoss:
          description: Packet lost (in terms of percentage) between the physical location and the network (wired interface, air interface)
          format: double
          type: number
      type: object
    EventPoasInRange:
      description: POAs In Range Event object
      example:
        ue: ue
        poasInRange:
        - poa1
        - poa2
      properties:
        ue:
          description: UE identifier
          type: string
        poasInRange:
          items:
            description: POAs visible to UE
            type: string
          type: array
      type: object
