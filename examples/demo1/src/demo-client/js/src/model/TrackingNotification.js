/**
 * MEEP Demo App API
 * This is the MEEP Demo App API
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccessPointId', 'model/Address', 'model/CallbackData', 'model/InterestRealm', 'model/Timestamp', 'model/UserEventType', 'model/ZoneId'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./AccessPointId'), require('./Address'), require('./CallbackData'), require('./InterestRealm'), require('./Timestamp'), require('./UserEventType'), require('./ZoneId'));
  } else {
    // Browser globals (root is window)
    if (!root.MeepDemoAppApi) {
      root.MeepDemoAppApi = {};
    }
    root.MeepDemoAppApi.TrackingNotification = factory(root.MeepDemoAppApi.ApiClient, root.MeepDemoAppApi.AccessPointId, root.MeepDemoAppApi.Address, root.MeepDemoAppApi.CallbackData, root.MeepDemoAppApi.InterestRealm, root.MeepDemoAppApi.Timestamp, root.MeepDemoAppApi.UserEventType, root.MeepDemoAppApi.ZoneId);
  }
}(this, function(ApiClient, AccessPointId, Address, CallbackData, InterestRealm, Timestamp, UserEventType, ZoneId) {
  'use strict';




  /**
   * The TrackingNotification model module.
   * @module model/TrackingNotification
   * @version 0.0.1
   */

  /**
   * Constructs a new <code>TrackingNotification</code>.
   * Zonal or User tracking notification - callback generated toward an ME app with a zonal or user tracking subscription
   * @alias module:model/TrackingNotification
   * @class
   * @param callbackData {module:model/CallbackData} 
   */
  var exports = function(callbackData) {
    var _this = this;

    _this['callbackData'] = callbackData;







  };

  /**
   * Constructs a <code>TrackingNotification</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TrackingNotification} obj Optional instance to populate.
   * @return {module:model/TrackingNotification} The populated <code>TrackingNotification</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('callbackData')) {
        obj['callbackData'] = CallbackData.constructFromObject(data['callbackData']);
      }
      if (data.hasOwnProperty('zoneId')) {
        obj['zoneId'] = ZoneId.constructFromObject(data['zoneId']);
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = Address.constructFromObject(data['address']);
      }
      if (data.hasOwnProperty('interestRealma')) {
        obj['interestRealma'] = InterestRealm.constructFromObject(data['interestRealma']);
      }
      if (data.hasOwnProperty('userEventType')) {
        obj['userEventType'] = UserEventType.constructFromObject(data['userEventType']);
      }
      if (data.hasOwnProperty('currentAccessPointId')) {
        obj['currentAccessPointId'] = AccessPointId.constructFromObject(data['currentAccessPointId']);
      }
      if (data.hasOwnProperty('previousAccessPointId')) {
        obj['previousAccessPointId'] = AccessPointId.constructFromObject(data['previousAccessPointId']);
      }
      if (data.hasOwnProperty('timestamp')) {
        obj['timestamp'] = Timestamp.constructFromObject(data['timestamp']);
      }
    }
    return obj;
  }

  /**
   * @member {module:model/CallbackData} callbackData
   */
  exports.prototype['callbackData'] = undefined;
  /**
   * @member {module:model/ZoneId} zoneId
   */
  exports.prototype['zoneId'] = undefined;
  /**
   * @member {module:model/Address} address
   */
  exports.prototype['address'] = undefined;
  /**
   * @member {module:model/InterestRealm} interestRealma
   */
  exports.prototype['interestRealma'] = undefined;
  /**
   * @member {module:model/UserEventType} userEventType
   */
  exports.prototype['userEventType'] = undefined;
  /**
   * @member {module:model/AccessPointId} currentAccessPointId
   */
  exports.prototype['currentAccessPointId'] = undefined;
  /**
   * @member {module:model/AccessPointId} previousAccessPointId
   */
  exports.prototype['previousAccessPointId'] = undefined;
  /**
   * @member {module:model/Timestamp} timestamp
   */
  exports.prototype['timestamp'] = undefined;



  return exports;
}));


